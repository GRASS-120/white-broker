import { useEffect, useState } from 'react';
import { useForm } from 'react-hook-form';

const Form = () => {
   const [isSubmitSuccessful, setIsSubmitSuccessful] = useState(false);

   const {
      register,
      handleSubmit,
      reset,
      // resetField - reset –ø–æ–ª—è (—Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!)
      formState: { errors },
   } = useForm();

   // –ª—É—á—à–µ –æ–±–Ω—É–ª—è—Ç—å —Ñ–æ—Ä–º—É –≤ useEffect (—Ç–∞–∫ –≤ –¥–æ–∫–µ –Ω–∞–ø–∏—Å–∞–Ω–æ)
   useEffect(() => {
      reset();
      setIsSubmitSuccessful(false);
   }, [isSubmitSuccessful]);

   const submit = (data) => {
      console.log(data);
      setIsSubmitSuccessful(true);
   };

   const errorHandler = (e) => {
      console.log(e);
   };

   return (
      <form
         onSubmit={handleSubmit(submit, errorHandler)}
         className="m-auto mt-12 flex w-1/5 flex-col items-center bg-slate-300 p-4"
      >
         <input
            {...register('name', {
               required: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤–∞—à–µ –∏–º—è',
               minLength: {
                  value: 2,
                  message: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏: 2',
               },
               maxLength: {
                  value: 50,
                  message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏: 50',
               },
               pattern: {
                  value: /^[a-z–∞-—è—ë]+$/i,
                  message:
                     '–í –∏–º–µ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã',
               },
            })}
            className="mb-2 mt-2 p-1"
            placeholder="roflan"
         />
         <p className=" text-red-700">{errors.name?.message}</p>

         <input
            type="number"
            placeholder="88005553535"
            {...register('phoneNumber', {
               required: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
               pattern: {
                  value: /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s\./0-9]*$/g,
                  message: '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
               },
            })}
            className="mb-2 mt-2 p-1"
         />
         <p className=" text-red-700">{errors.phoneNumber?.message}</p>

         <input
            type="number"
            placeholder="—Å—Ç–æ —Ç—ã—â –º–∏–ª–ª–∏–æ–Ω–æ–≤!"
            {...register('sum', {
               required: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É',
               min: {
                  value: 500000,
                  message: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: 500.000‚ÇΩ',
               },
               max: {
                  value: 10000000,
                  message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: 1.000.0000‚ÇΩ',
               },
            })}
            className="mb-2 mt-2 p-1"
         />
         <p className=" text-red-700">{errors.sum?.message}</p>

         <button type="submit">–µ–±–∞—Ç—å—Å—è –≤ –∂–æ–ø—É!</button>
         <label className="flex">
            <input
               type="checkbox"
               {...register('allowPolicy', {
                  required:
                     '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
               })}
            />
            <p> —á–µ–ª –Ω—É –Ω–∞–∂–º–∏ –≥–∞–ª–æ—á–∫—É üëâüëà</p>
         </label>
         <p className=" text-red-700">{errors.allowPolicy?.message}</p>
      </form>
   );
};

export default Form;
